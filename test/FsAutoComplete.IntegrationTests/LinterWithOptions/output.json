{
  "Kind": "info",
  "Data": "Synchronous parsing started"
}
{
  "Kind": "errors",
  "Data": {
    "File": "<absolute path removed>/FsAutoComplete.IntegrationTests/LinterWithOptions/Script.fsx",
    "Errors": []
  }
}
{
  "Kind": "lint",
  "Data": [
    {
      "Info": "Separate module declarations with 2 blank lines.",
      "Range": {
        "StartColumn": 1,
        "StartLine": 2,
        "EndColumn": 1,
        "EndLine": 3
      },
      "Input": "let test1 a b = not (a=b)\nlet test2 a b = not (a<>b)\nlet test3 = fun a -> a\nlet test4 = not true\nlet test5 = not false\nlet test6 = List.fold ( + ) 0\nlet test7 a = a<>true\nlet test8 a = a=null\nlet test9 a = List.head (List.sort a)\n",
      "Fix": null
    },
    {
      "Info": "Separate module declarations with 2 blank lines.",
      "Range": {
        "StartColumn": 1,
        "StartLine": 3,
        "EndColumn": 1,
        "EndLine": 4
      },
      "Input": "let test1 a b = not (a=b)\nlet test2 a b = not (a<>b)\nlet test3 = fun a -> a\nlet test4 = not true\nlet test5 = not false\nlet test6 = List.fold ( + ) 0\nlet test7 a = a<>true\nlet test8 a = a=null\nlet test9 a = List.head (List.sort a)\n",
      "Fix": null
    },
    {
      "Info": "Separate module declarations with 2 blank lines.",
      "Range": {
        "StartColumn": 1,
        "StartLine": 4,
        "EndColumn": 1,
        "EndLine": 5
      },
      "Input": "let test1 a b = not (a=b)\nlet test2 a b = not (a<>b)\nlet test3 = fun a -> a\nlet test4 = not true\nlet test5 = not false\nlet test6 = List.fold ( + ) 0\nlet test7 a = a<>true\nlet test8 a = a=null\nlet test9 a = List.head (List.sort a)\n",
      "Fix": null
    },
    {
      "Info": "Separate module declarations with 2 blank lines.",
      "Range": {
        "StartColumn": 1,
        "StartLine": 5,
        "EndColumn": 1,
        "EndLine": 6
      },
      "Input": "let test1 a b = not (a=b)\nlet test2 a b = not (a<>b)\nlet test3 = fun a -> a\nlet test4 = not true\nlet test5 = not false\nlet test6 = List.fold ( + ) 0\nlet test7 a = a<>true\nlet test8 a = a=null\nlet test9 a = List.head (List.sort a)\n",
      "Fix": null
    },
    {
      "Info": "Separate module declarations with 2 blank lines.",
      "Range": {
        "StartColumn": 1,
        "StartLine": 6,
        "EndColumn": 1,
        "EndLine": 7
      },
      "Input": "let test1 a b = not (a=b)\nlet test2 a b = not (a<>b)\nlet test3 = fun a -> a\nlet test4 = not true\nlet test5 = not false\nlet test6 = List.fold ( + ) 0\nlet test7 a = a<>true\nlet test8 a = a=null\nlet test9 a = List.head (List.sort a)\n",
      "Fix": null
    },
    {
      "Info": "Separate module declarations with 2 blank lines.",
      "Range": {
        "StartColumn": 1,
        "StartLine": 7,
        "EndColumn": 1,
        "EndLine": 8
      },
      "Input": "let test1 a b = not (a=b)\nlet test2 a b = not (a<>b)\nlet test3 = fun a -> a\nlet test4 = not true\nlet test5 = not false\nlet test6 = List.fold ( + ) 0\nlet test7 a = a<>true\nlet test8 a = a=null\nlet test9 a = List.head (List.sort a)\n",
      "Fix": null
    },
    {
      "Info": "Separate module declarations with 2 blank lines.",
      "Range": {
        "StartColumn": 1,
        "StartLine": 8,
        "EndColumn": 1,
        "EndLine": 9
      },
      "Input": "let test1 a b = not (a=b)\nlet test2 a b = not (a<>b)\nlet test3 = fun a -> a\nlet test4 = not true\nlet test5 = not false\nlet test6 = List.fold ( + ) 0\nlet test7 a = a<>true\nlet test8 a = a=null\nlet test9 a = List.head (List.sort a)\n",
      "Fix": null
    },
    {
      "Info": "Separate module declarations with 2 blank lines.",
      "Range": {
        "StartColumn": 1,
        "StartLine": 9,
        "EndColumn": 1,
        "EndLine": 10
      },
      "Input": "let test1 a b = not (a=b)\nlet test2 a b = not (a<>b)\nlet test3 = fun a -> a\nlet test4 = not true\nlet test5 = not false\nlet test6 = List.fold ( + ) 0\nlet test7 a = a<>true\nlet test8 a = a=null\nlet test9 a = List.head (List.sort a)\n",
      "Fix": null
    },
    {
      "Info": "Prefer namespaces at top level.",
      "Range": {
        "StartColumn": 1,
        "StartLine": 1,
        "EndColumn": 1,
        "EndLine": 10
      },
      "Input": "let test1 a b = not (a=b)\nlet test2 a b = not (a<>b)\nlet test3 = fun a -> a\nlet test4 = not true\nlet test5 = not false\nlet test6 = List.fold ( + ) 0\nlet test7 a = a<>true\nlet test8 a = a=null\nlet test9 a = List.head (List.sort a)\n",
      "Fix": null
    }
  ]
}
{
  "Kind": "info",
  "Data": "quitting..."
}
